version: "3.7"

services:
  back-end:
    container_name: minidev-ext-i-bk
    build: ./back-end
    image: didevwebms/minidev_ext_1_bk:latest
    ports:
      - "4000:4000"
    working_dir: /usr/minidev-ext-i-bk
    volumes:
      - ./back-end:/usr/minidev-ext-i-bk
    environment:
      DB_HOST:  postgres
    depends_on:
      - postgres
      - redis
    networks:
      - back-end
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - "5433:5432"
    volumes:
      - vol_data:/usr/minidev-ext-i-bk/data
    environment:
      POSTGRES_DB: penn-minidev-ts-graphql
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    networks:
      - back-end
  redis:
    container_name: redis
    image: redis
    hostname: redis
    ports:
      - '6379:6379'
    networks:
      - back-end
    volumes:
      - vol_data:/usr/minidev-ext-i-bk/redis
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment: 
          PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
          PGADMIN_DEFAULT_PASSWORD: "root"
          PGADMIN_LISTEN_PORT: 5050
    ports: 
      - "5050:5050"
    depends_on:
      - postgres
    networks:
      - back-end
    volumes:
      - vol_data:/usr/minidev-ext-i-bk/pgadmin
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - "8081:8081"
    depends_on:
      - redis
    networks:
      - back-end
    volumes:
      - vol_data:/usr/minidev-ext-i-bk/redis-commander
volumes:
  vol_data:
#    external: true    # Create with:  docker volume create
networks:
  back-end:
    driver: bridge
#    external:         # Create with:  docker network create
#        name: i-already-created-this